version: "3"
services:
#  elasticsearch:
#    image: elasticsearch:6.8.4
#    restart: always
#    container_name: elasticsearch
#    environment:
#      - "cluster.name=elasticsearch" #设置集群名称为elasticsearch
#      - "discovery.type=single-node" #以单一节点模式启动
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" #设置使用jvm内存大小，稍微配置大点，不然有可能启动不成功
#    volumes:
#      - /usr/local/var/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载
#      - /usr/local/var/elasticsearch/data:/usr/share/elasticsearch/data #数据文件挂载
#    ports:
#      - 9200:9200
#      - 9300:9300
#  kibana:
#    image: kibana:6.4.0
#    container_name: kibana
#    restart: always
#    links:  #同一个compose文件管理的服务可以直接用服务名访问，如果要给服务取别名则可以用links实现，如下面的es就是elasticsearch服务的别名
#      - elasticsearch:es #可以用es这个域名访问elasticsearch服务
#    depends_on:
#      - elasticsearch #kibana在elasticsearch启动之后再启动
#    environment:
#      - "elasticsearch.hosts=http://es:9200" #设置访问elasticsearch的地址
#    ports:
#      - 5601:5601
#  filebeat:
#    image: docker.elastic.co/beats/filebeat:6.5.4
#    container_name: filebeat
#    privileged: true
#    volumes:
#      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
#      - /usr/local/var/log/redis.log:/usr/local/var/log/redis.log
#    #      - /data/web/app/runtime/logs/buyer:/data/web/app/runtime/logs/buyer
#    depends_on:
#      - elasticsearch #kibana在elasticsearch启动之后再启动
  nginx:
    restart: always
    image: nginx:1.11.6-alpine
    ports:
      - 8080:80
      - 80:80
      - 443:443
      - 8888:8888
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
#      - /usr/local/var/nginx/log:/var/log/nginx
#      - ./www:/var/www
#      - /etc/letsencrypt:/etc/letsencrypt
